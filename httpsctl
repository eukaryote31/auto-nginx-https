#!/bin/bash

if [ "$EUID" -ne 0 ]
  then echo "This script must be run as root!"
  exit
fi

while getopts 'e:d:t' flag; do
  case "${flag}" in
    e) EMAIL="${OPTARG}" ;;
    d) DOMAIN="${OPTARG}" ;;
    t) TOS="yes" ;;
  esac
done

DIALOG_TITLE="HTTPS Setup"

install() {
    [ -e /etc/lsb-release ] && ubuntu_install
}

setup_certbot() {
    STEP=certbot
    certbot --nginx --email "$EMAIL" -d "$DOMAIN" -n --agree-tos || die certbotsetup

    # install crontab if not already installed
    crontab -l | grep -q "15 02 * * * `which certbot` renew" || autorenew_crontab
}

autorenew_crontab() {
    (crontab -l 2>/dev/null; echo "15 02 * * * `which certbot` renew --pre-hook \"service nginx stop\" --post-hook \"service nginx start\"") | crontab -
}

ubuntu_install() {
    OS=ubuntu

    # install whiptail if not present
    [ `dpkg -l | grep '\swhiptail\s\s' | wc -l` -eq 1 ] || apt-get install whiptail

    if [ -z "$EMAIL" ]; then
        EMAIL=$(whiptail --inputbox "Enter your email (used by certbot for urgent renewal and security notices)" 8 78 --title "$DIALOG_TITLE" 3>&1 1>&2 2>&3)

        if [ $? -ne 0 ]; then
            whiptail --title "$DIALOG_TITLE" --msgbox "You must provide an email!" 8 78
            exit
        fi
    fi

    if [ -z "$DOMAIN" ]; then
        DOMAIN=$(whiptail --inputbox 'Enter your domain (NOT IP!) that points to this IP (comma separated)' 8 78 --title "$DIALOG_TITLE" 3>&1 1>&2 2>&3)

        if [ $? -ne 0 ]; then
            whiptail --title "$DIALOG_TITLE" --msgbox "You must provide domain(s)!" 8 78
            exit
        fi
    fi

    if [ -z "$TOS" ]; then
        if (whiptail --title "$DIALOG_TITLE" --yesno "Please read the Terms of Service at https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf. You must agree in order to register with the ACME server at https://acme-v01.api.letsencrypt.org/directory. Select YES to accept the ToS." 11 78) then
            echo "TOS Agreed!"
        else
            whiptail --title "$DIALOG_TITLE" --msgbox "You must accept the Terms of Service to use CertBot!" 8 78
            exit
        fi
    fi

    ubuntu_install_nginx
    ubuntu_install_certbot
    setup_certbot
    echo "HTTPS set up successfully!"
    exit
}

ubuntu_install_nginx() {
    STEP=inginx
    [ `dpkg -l | grep '\snginx\s\s' | wc -l` -eq 1 ] && return

    add-apt-repository "deb http://nginx.org/packages/ubuntu/ $(lsb_release -s -c) main" -y || die addrepo
    sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys ABF5BD827BD9BF62
    apt-get update || die aptupdate
    apt-get install nginx -y || die install

    sed "s/SERVERNAME/$DOMAIN/" < nginx.conf > /etc/nginx/sites-enabled/default
}

ubuntu_install_certbot() {
    step=icertbot
    [ `dpkg -l | grep '\spython-certbot-nginx\s\s' | wc -l` -eq 1 ] && return

    apt-get install software-properties-common -y || die software-properties-common
    add-apt-repository ppa:certbot/certbot -y || die ppa
    apt-get update || die aptupdate
    apt-get install python-certbot-nginx -y || die install
}


die() {
    echo "!!! SOMETHING WENT WRONG ($OS $STEP $1) !!!"
    exit
}

install
